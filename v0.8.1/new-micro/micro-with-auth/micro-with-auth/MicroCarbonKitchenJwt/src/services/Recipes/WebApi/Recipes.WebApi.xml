<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApi</name>
    </assembly>
    <members>
        <member name="M:WebApi.Controllers.v1.RecipesController.GetRecipes(Application.Dtos.Recipe.RecipeParametersDto)">
             <summary>
             Gets a list of all Recipes.
             </summary>
             <response code="200">Recipe list returned successfully.</response>
             <response code="400">Recipe has missing/invalid values.</response>
             <response code="401">This request was not able to be authenticated.</response>
             <response code="403">The required permissions to access this resource were not present in the given request.</response>
             <response code="500">There was an error on the server while creating the Recipe.</response>
             <remarks>
             Requests can be narrowed down with a variety of query string values:
             ## Query String Parameters
             - **PageNumber**: An integer value that designates the page of records that should be returned.
             - **PageSize**: An integer value that designates the number of records returned on the given page that you would like to return. This value is capped by the internal MaxPageSize.
             - **SortOrder**: A comma delimited ordered list of property names to sort by. Adding a `-` before the name switches to sorting descendingly.
             - **Filters**: A comma delimited list of fields to filter by formatted as `{Name}{Operator}{Value}` where
                 - {Name} is the name of a filterable property. You can also have multiple names (for OR logic) by enclosing them in brackets and using a pipe delimiter, eg. `(LikeCount|CommentCount)>10` asks if LikeCount or CommentCount is >10
                 - {Operator} is one of the Operators below
                 - {Value} is the value to use for filtering. You can also have multiple values (for OR logic) by using a pipe delimiter, eg.`Title@= new|hot` will return posts with titles that contain the text "new" or "hot"
            
                | Operator | Meaning                       | Operator  | Meaning                                      |
                | -------- | ----------------------------- | --------- | -------------------------------------------- |
                | `==`     | Equals                        |  `!@=`    | Does not Contains                            |
                | `!=`     | Not equals                    |  `!_=`    | Does not Starts with                         |
                | `>`      | Greater than                  |  `@=*`    | Case-insensitive string Contains             |
                | `&lt;`   | Less than                     |  `_=*`    | Case-insensitive string Starts with          |
                | `>=`     | Greater than or equal to      |  `==*`    | Case-insensitive string Equals               |
                | `&lt;=`  | Less than or equal to         |  `!=*`    | Case-insensitive string Not equals           |
                | `@=`     | Contains                      |  `!@=*`   | Case-insensitive string does not Contains    |
                | `_=`     | Starts with                   |  `!_=*`   | Case-insensitive string does not Starts with |
             </remarks>
        </member>
        <member name="M:WebApi.Controllers.v1.RecipesController.GetRecipe(System.Int32)">
            <summary>
            Gets a single Recipe by ID.
            </summary>
            <response code="200">Recipe record returned successfully.</response>
            <response code="400">Recipe has missing/invalid values.</response>
            <response code="401">This request was not able to be authenticated.</response>
            <response code="403">The required permissions to access this resource were not present in the given request.</response>
            <response code="500">There was an error on the server while creating the Recipe.</response>
        </member>
        <member name="M:WebApi.Controllers.v1.RecipesController.AddRecipe(Application.Dtos.Recipe.RecipeForCreationDto)">
            <summary>
            Creates a new Recipe record.
            </summary>
            <response code="201">Recipe created.</response>
            <response code="400">Recipe has missing/invalid values.</response>
            <response code="401">This request was not able to be authenticated.</response>
            <response code="403">The required permissions to access this resource were not present in the given request.</response>
            <response code="500">There was an error on the server while creating the Recipe.</response>
        </member>
        <member name="M:WebApi.Controllers.v1.RecipesController.DeleteRecipe(System.Int32)">
            <summary>
            Deletes an existing Recipe record.
            </summary>
            <response code="201">Recipe deleted.</response>
            <response code="400">Recipe has missing/invalid values.</response>
            <response code="401">This request was not able to be authenticated.</response>
            <response code="403">The required permissions to access this resource were not present in the given request.</response>
            <response code="500">There was an error on the server while creating the Recipe.</response>
        </member>
        <member name="M:WebApi.Controllers.v1.RecipesController.UpdateRecipe(System.Int32,Application.Dtos.Recipe.RecipeForUpdateDto)">
            <summary>
            Updates an entire existing Recipe.
            </summary>
            <response code="201">Recipe updated.</response>
            <response code="400">Recipe has missing/invalid values.</response>
            <response code="401">This request was not able to be authenticated.</response>
            <response code="403">The required permissions to access this resource were not present in the given request.</response>
            <response code="500">There was an error on the server while creating the Recipe.</response>
        </member>
        <member name="M:WebApi.Controllers.v1.RecipesController.PartiallyUpdateRecipe(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Application.Dtos.Recipe.RecipeForUpdateDto})">
            <summary>
            Updates specific properties on an existing Recipe.
            </summary>
            <response code="201">Recipe updated.</response>
            <response code="400">Recipe has missing/invalid values.</response>
            <response code="401">This request was not able to be authenticated.</response>
            <response code="403">The required permissions to access this resource were not present in the given request.</response>
            <response code="500">There was an error on the server while creating the Recipe.</response>
        </member>
    </members>
</doc>
